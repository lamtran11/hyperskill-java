package bullscows;

import java.util.Objects;
import java.util.Random;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Random random = new Random();
        Scanner scanner = new Scanner(System.in);
        String[] characters = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
                "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n",
                "o", "p", "q", "r", "s", "t", "u", "v", "w", " x", "y", "z"};

        System.out.print("Please, enter the secret code's length:");
        int secretCodeLength = Integer.parseInt(scanner.nextLine());
        System.out.print("Input the number of possible symbols in the code: ");
        int possibleRange = Integer.parseInt(scanner.nextLine());

        if (secretCodeLength < 36) {
            StringBuilder sb = new StringBuilder();
            while (sb.length() < secretCodeLength) {
                String digit = characters[(random.nextInt(possibleRange - 1))];
                if (!sb.toString().contains(digit)) {
                    if (sb.length() == 0) {
                        if (!digit.equals("0")) {
                            sb.append(digit);
                        }
                    }
                }
                String secretCode = sb.toString();

                String stars = ""; // the string of * with the length of the secret code
                for (int i = 0; i < secretCodeLength; i++) {
                    stars = stars + "*";
                }

                String digitRange = ""; // 0-9
                String letterRange = ""; // a-z
                if (possibleRange <= 10) {
                    if (possibleRange == 1) {
                        digitRange = "0";
                    } else {
                        digitRange = "0-" + characters[possibleRange - 1]; // 0-...
                    }
                } else {
                    digitRange = "0-9"; // meaning all digits are contained in possible symbols

                    if (possibleRange == 11) {
                        letterRange = "a";
                    } else {
                        letterRange = "a-" + characters[possibleRange - 1]; // a-...
                    }
                }
                String symbolRange = (possibleRange <= 10) ? String.format("(%s)", digitRange) : String.format("(%s, %s)", digitRange, letterRange);

                // play
                System.out.println(String.format("The secret is prepared: %s %s.", stars, symbolRange));
                System.out.println("Okay, let's start a game!");
                int bulls = 0;
                int cows = 0;
                int count = 1;

                while (bulls < secretCodeLength) {
                    bulls = 0; // reset the bulls for the next turn
                    cows = 0; // reset the cows for the next turn

                    System.out.println(String.format("Turn %d:", count));
                    String input = scanner.nextLine();

                    // count the bulls and cows
                    for (int i = 0; i < input.length(); i++) {

                        String digitOfInput = String.valueOf(input.charAt(i));

                        if (input.charAt(i) == secretCode.charAt(i)) {
                            bulls++; // the input number has the same digit, same position
                        } else if (secretCode.contains(digitOfInput)) {
                            cows++; // the secret code contains the digit, but not in same position
                        }

                    }

                    count++;
                }
            }


            while (secretCodeLength >= 11) {
                System.out.println("Error");
                secretCodeLength = Integer.parseInt(scanner.nextLine());
            }
            String secretCode = random(secretCodeLength);
            System.out.println("Okay, let's start a game!");
            int turn = 1;
            boolean stop = false;

            while (!stop) {
                System.out.println(String.format("Turn %d: ", turn));
                String inputUser = scanner.nextLine();

                processingInput(inputUser, secretCode);
                turn++;

                if (Objects.equals(inputUser, secretCode)) {
                    stop = true;

                    System.out.println("Congratulations! You guessed the secret code.");
                }
            }

        }
        private static String random ( int length){
            StringBuilder code = new StringBuilder();

            while (code.length() < length) {
                int randomNumber = (int) (Math.random() * 10);
                if (!code.toString().contains(Integer.toString(randomNumber))) {
                    code.append(randomNumber);
                }
            }
            return code.toString();
        }

        public static void processingInput (String input, String answer){
            int bull = 0;
            int cow = 0;
            int count = 1;
            String inputString = input;
            String answerString = answer;

            for (int i = 0; i < inputString.length(); i++) {
                char currentNumber = inputString.charAt(i);

                if (answerString.contains(Character.toString(currentNumber))) {
                    if (answerString.charAt(i) == currentNumber) {
                        bull++;
                    } else {
                        cow++;
                    }
                }
                count++;
            }
            if (bull == 0 && cow == 0) {
                System.out.println("Grade: None");
            } else if (bull == 0) {
                String ending = " cow";
                if (cow > 1) {
                    ending = ending + "s";
                }
                System.out.println("Grade: " + cow + ending);
            } else if (cow == 0) {
                String ending = " bull";
                if (bull > 1) {
                    ending = ending + "s";
                }
                System.out.println("Grade: " + bull + ending);
            } else {
                String endingBull = "bull";
                if (bull > 1) {
                    endingBull = endingBull + "s";
                }
                String endingCow = "cow";
                if (cow > 1) {
                    endingCow = endingCow + "s";
                }

                System.out.println(String.format("Grade: %d %s and %d %s.", bull, endingBull, cow, endingCow));
            }

            {

            }
        }
    }
}
